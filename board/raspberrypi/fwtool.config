%% -*- mode: Erlang; fill-column: 80; comment-column: 75; -*-

%% Firmware configuration file for the Raspberry Pi

%% !!The units of each section below are in 512 byte blocks

%% Image layout
%% +------------------------+
%% | MBR                    |
%% +------------------------+
%% | Boot partition (FAT32) |
%% | zImage                 |
%% +------------------------+
%% | Rootfs A (EXT4)        |
%% +------------------------+
%% | Rootfs B (EXT4)        |
%% +------------------------+
%% | Application (EXT4)     |
%% +------------------------+
%%
%% The Master Boot Record (MBR) is at block 0. This isn't
%% configurable.

%% The Raspberry Pi is incredibly picky on the partition sizes
%% and in ways that I don't understand. Test changes one at a
%% time to make sure that they boot.
{boot_partition_start, 63}.
{boot_partition_count, 77261}.

%% Let the rootfs have room to grow up to 128 MiB and align
%% it to the nearest 1 MB boundary
{rootfs_a_partition_start, 77324}.
{rootfs_a_partition_count, 144522}.

{rootfs_b_partition_start, 221846}.
{rootfs_b_partition_count, 144522}.

%% Application partition. This partition can occupy all of the
%% remaining space. Size it to fit the destination.
{application_partition_start, 366368}.
{application_partition_count, 2088450}.

%% Bootloader settings
{bootloader, rpi}.

%% Paths to the bootloaders and rootfs images
{boot_partition_extra_files,
 [
  {"buildroot/output/images/rpi-firmware/bootcode.bin", "bootcode.bin"},
  {"buildroot/output/images/rpi-firmware/fixup.dat", "fixup.dat"},
  {"buildroot/output/images/rpi-firmware/start.elf", "start.elf"}
 ]}.
{kernel_path, "buildroot/output/images/zImage"}.
{rootfs_path, "buildroot/output/images/rootfs.ext2"}.
