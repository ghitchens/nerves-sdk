From 78919229488865788994e5f589bf073ae42ec441 Mon Sep 17 00:00:00 2001
From: Florian Meier <florian.meier@koalo.de>
Date: Mon, 28 Oct 2013 21:43:40 +0100
Subject: [PATCH] Add support for BSC2.

Enables I2C (DDC) line of HDMI. Warning: Might destroy your monitor.

Signed-off-by: Florian Meier <florian.meier@koalo.de>
---
 arch/arm/mach-bcm2708/bcm2708.c               |   24 ++++++++++++++++++++++++
 arch/arm/mach-bcm2708/include/mach/platform.h |    1 +
 drivers/i2c/busses/i2c-bcm2708.c              |    9 +++++++--
 3 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-bcm2708/bcm2708.c b/arch/arm/mach-bcm2708/bcm2708.c
index ca64a5c..e0536a4 100644
--- a/arch/arm/mach-bcm2708/bcm2708.c
+++ b/arch/arm/mach-bcm2708/bcm2708.c
@@ -233,6 +233,9 @@ static struct clk_lookup lookups[] = {
 	 }, {	/* BSC1 */
 		 .dev_id = "bcm2708_i2c.1",
 		 .clk = &sdhost_clk,
+	 }, {	/* BSC2 */
+		 .dev_id = "bcm2708_i2c.2",
+		 .clk = &sdhost_clk,
 	 }
 };
 
@@ -609,6 +612,26 @@ static struct platform_device bcm2708_bsc1_device = {
 	.resource = bcm2708_bsc1_resources,
 };
 
+
+static struct resource bcm2708_bsc2_resources[] = {
+	{
+		.start = BSC2_BASE,
+		.end = BSC2_BASE + SZ_256 - 1,
+		.flags = IORESOURCE_MEM,
+	}, {
+		.start = INTERRUPT_I2C,
+		.end = INTERRUPT_I2C,
+		.flags = IORESOURCE_IRQ,
+	}
+};
+
+static struct platform_device bcm2708_bsc2_device = {
+	.name = "bcm2708_i2c",
+	.id = 2,
+	.num_resources = ARRAY_SIZE(bcm2708_bsc2_resources),
+	.resource = bcm2708_bsc2_resources,
+};
+
 static struct platform_device bcm2835_hwmon_device = {
 	.name = "bcm2835_hwmon",
 };
@@ -739,6 +762,7 @@ void __init bcm2708_init(void)
 	bcm_register_device(&bcm2708_spi_device);
 	bcm_register_device(&bcm2708_bsc0_device);
 	bcm_register_device(&bcm2708_bsc1_device);
+	bcm_register_device(&bcm2708_bsc2_device);
 
 	bcm_register_device(&bcm2835_hwmon_device);
 	bcm_register_device(&bcm2835_thermal_device);
diff --git a/arch/arm/mach-bcm2708/include/mach/platform.h b/arch/arm/mach-bcm2708/include/mach/platform.h
index 992a630..bd2f779 100644
--- a/arch/arm/mach-bcm2708/include/mach/platform.h
+++ b/arch/arm/mach-bcm2708/include/mach/platform.h
@@ -72,6 +72,7 @@
 #define EMMC_BASE                (BCM2708_PERI_BASE + 0x300000) /* eMMC interface */
 #define SMI_BASE		 (BCM2708_PERI_BASE + 0x600000) /* SMI */
 #define BSC1_BASE		 (BCM2708_PERI_BASE + 0x804000) /* BSC1 I2C/TWI */
+#define BSC2_BASE		 (BCM2708_PERI_BASE + 0x805000) /* BSC2 I2C/TWI (Handle with care! Shared with HDMI module) */
 #define USB_BASE                 (BCM2708_PERI_BASE + 0x980000) /* DTC_OTG USB controller */
 #define MCORE_BASE               (BCM2708_PERI_BASE + 0x0000)   /* Fake frame buffer device (actually the multicore sync block*/
 
diff --git a/drivers/i2c/busses/i2c-bcm2708.c b/drivers/i2c/busses/i2c-bcm2708.c
index 33f4e7d..8267e54 100644
--- a/drivers/i2c/busses/i2c-bcm2708.c
+++ b/drivers/i2c/busses/i2c-bcm2708.c
@@ -287,7 +287,9 @@ static int bcm2708_i2c_probe(struct platform_device *pdev)
 		return PTR_ERR(clk);
 	}
 
-	bcm2708_i2c_init_pinmode(pdev->id);
+	if(pdev->id < 2) {
+		bcm2708_i2c_init_pinmode(pdev->id);
+	}
 
 	bi = kzalloc(sizeof(*bi), GFP_KERNEL);
 	if (!bi)
@@ -310,8 +312,11 @@ static int bcm2708_i2c_probe(struct platform_device *pdev)
 	case 1:
 		adap->class = I2C_CLASS_DDC;
 		break;
+	case 2:
+		adap->class = I2C_CLASS_DDC;
+		break;
 	default:
-		dev_err(&pdev->dev, "can only bind to BSC 0 or 1\n");
+		dev_err(&pdev->dev, "can only bind to BSC 0, 1 or 2\n");
 		err = -ENXIO;
 		goto out_free_bi;
 	}
-- 
1.7.9.5

